

object coins {
  
  def main(args: Array[String]){
    val coinDenominations: List[Int] = List(1, 2, 5) 
    countChange(10, coinDenominations)
  }
  
  def countChange(money: Int, coins: List[Int]): Int = {
    def reduce(money: Int, coins: List[Int], accCounter: Int): Int = {
        if(money == 0) accCounter + 1
        else if(money < 0 || coins.isEmpty) accCounter
        else reduce(money - coins.head, coins, accCounter) + reduce(money, coins.tail, accCounter)
   }

   if(money <= 0 || coins.isEmpty) 0
   else reduce(money, coins, 0)
  }
  
}